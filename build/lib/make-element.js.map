{"version":3,"sources":["../../src/lib/make-element.js"],"names":[],"mappings":"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","file":"lib/make-element.js","sourcesContent":["/**\n * Create a new element.\n * @param {MakeElementOptions} options Options to make a new element.\n * @param {string} options.name The name of the new element element.\n * @param {string|string[]} [options.content] The content to write inside of the element, such as string or an array of strings.\n * @param {object} [options.attributes] A map of attributes to add to the element.\n */\nexport const makeElement = (options) => {\n  if (!options) throw new Error('Options were not passed.')\n  const {\n    name, content, attributes = {},\n  } = options\n  if (!name) throw new Error('Expected to see an element name.')\n  const attrs = makeAttrs(attributes, name)\n  const c = makeContent(content)\n  const res = wrap(name, attrs, c)\n  return res\n}\n\nexport const makeAttrs = (attributes, name) => {\n  const indentLength = name.length + 2 // e.g., `<svg\n  const i = ' '.repeat(indentLength)\n  const attrs = Object.keys(attributes)\n    .filter((key) => {\n      const val = attributes[key]\n      return val !== undefined\n    }).map((key) => {\n      const val = attributes[key]\n      const s = `${key}=\"${val}\"`\n      return s\n    })\n  const { acc: res } = attrs.reduce(({ prevLineLength, acc }, attr) => {\n    const test = ` ${attr}`\n    if (prevLineLength + test.length > 100) {\n      const s = `${i}${attr}`\n      return {\n        prevLineLength: s.length,\n        acc: `${acc}\\n${s}`,\n      }\n    }\n    const newAcc = `${acc}${test}`\n    return {\n      prevLineLength: prevLineLength + test.length,\n      acc: newAcc,\n    }\n  }, { prevLineLength: indentLength, acc: '' })\n\n  return res\n}\n\nconst wrap = (name, attrs, content) => {\n  const s = `${name}${attrs}`\n  return content ? `<${s}>\n${content}\n</${name}>` : `<${s}/>`\n}\n\nconst makeContent = (content) => {\n  if (!content) return ''\n  const c = Array.isArray(content) ? content : [content]\n  const indented = c.map(el => indent(el, 2))\n  const cc = indented.join('\\n')\n  return cc\n}\nconst indent = (content, spaces) => {\n  const s = ' '.repeat(spaces)\n  return content.split('\\n').map((l) => {\n    return `${s}${l}`\n  }).join('\\n')\n}\n\n/* documentary types/make-element.xml */\n/**\n * @typedef {Object} MakeElementOptions Options to make a new element.\n * @prop {string} name The name of the new element element.\n * @prop {string|string[]} [content] The content to write inside of the element, such as string or an array of strings.\n * @prop {object} [attributes] A map of attributes to add to the element.\n */\n\nexport default makeElement"]}