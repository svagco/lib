{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;AAOA,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACtC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EACxD,KAAK,CAAC;IACJ,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC,CAAC,CAAC,CAAC;EACJ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;EAC7D,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG;IAC1B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;EAC1B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC;AACT","file":"index.js","sourcesContent":["/**\n * Create a new element.\n * @param {MakeElementOptions} options Options to make a new element.\n * @param {string} options.name The name of the new element element.\n * @param {string} [options.content] The content to write inside of the element.\n * @param {object} [options.attributes] A map of attributes to add to the element.\n */\nexport const makeElement = (options) => {\n  if (!options) throw new Error('Options were not passed.')\n  const {\n    name, content = '', attributes = {},\n  } = options\n  if (!name) throw new Error('Expected to see an element name.')\n  const attrs = Object.keys(attributes).reduce((acc, key) => {\n    const val = attributes[key]\n    return `${acc} ${key}=\"${val}\"`\n  }, '')\n  const s = `${name}${attrs}`\n  const res = content ? `<${s}>${content}</${name}>` : `<${s}/>`\n  return res\n}\n\n/* documentary types/index.xml */\n/**\n * @typedef {Object} MakeElementOptions Options to make a new element.\n * @prop {string} name The name of the new element element.\n * @prop {string} [content] The content to write inside of the element.\n * @prop {object} [attributes] A map of attributes to add to the element.\n */\n"]}