{"version":3,"sources":["../../src/elements/index.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO;;;;;;;;;;AAU5C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,UAAU,CAAC,CAAC;MACV,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACd,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;MACb,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;MACrB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;MACpC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;MACnD,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;IACxD,CAAC;IACD,OAAO;EACT,CAAC;EACD,MAAM,CAAC;AACT;;;;;;;;;;;;;AAaA,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAClC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9B,UAAU;EACZ,CAAC;EACD,MAAM,CAAC;AACT","file":"elements/index.js","sourcesContent":["import makeElement from '../lib/make-element'\n\n/**\n * Create an svg element.\n * @param {SVGOptions} options An option for creating an svg.\n * @param {number} options.width The width of the `svg`.\n * @param {number} options.height The height of the `svg`.\n * @param {string} options.content The content to put inside of the `svg`.\n * @param {boolean} [options.stretch=true] Expand the `svg` to the width of the container by not setting `width` and `height` attributes. Default `true`.\n */\nexport const svg = (options) => {\n  const { width, height, stretch = true, content } = options\n  const res = makeElement('svg', {\n    attributes: {\n      version: '1.1',\n      xmlns: 'http://www.w3.org/2000/svg',\n      'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n      viewBox: `0, 0, ${width}, ${height}`,\n      width: !stretch && width ? `${width}px` : undefined,\n      height: !stretch && height ? `${height}px` : undefined,\n    },\n    content,\n  })\n  return res\n}\n\n/**\n * The `<rect>` element is a basic SVG shape that creates rectangles, defined by their corner's position, their width, and their height. The rectangles may have their corners rounded.\n * @param {RectAttributes} attributes Non-global attributes for the element.\n * @param {length|percentage} [attributes.x=0] This attribute determines the x coordinate of the rect. Default `0`.\n * @param {length|percentage} [attributes.y=0] This attribute determines the y coordinate of the rect. Default `0`.\n * @param {'auto'|length|percentage} [attributes.width=\"auto\"] This attribute determines the width of the rect. Default `auto`.\n * @param {'auto'|length|percentage} [attributes.height=\"auto\"] This attribute determines the height of the rect. Default `auto`.\n * @param {'auto'|length|percentage} [attributes.rx=\"auto\"] This attribute determines the horizontal corner radius of the rect. Default `auto`.\n * @param {'auto'|length|percentage} [attributes.ry=\"auto\"] This attribute determines the vertical corner radius of the rect. Default `auto`.\n * @param {number} [attributes.pathLength] This attribute lets specify the total length for the path, in user units.\n */\nexport const rect = (attributes) => {\n  const res = makeElement('rect', {\n    attributes,\n  })\n  return res\n}\n\n/* documentary types/units.xml */\n/**\n * @typedef {string|number} length A length is a distance measurement, given as a number along with a unit.\n *\n * @typedef {string} percentage Percentages are specified as a number followed by a `%` character.\n */\n\n/* documentary types/elements/svg.xml */\n/**\n * @typedef {Object} SVGOptions An option for creating an svg.\n * @prop {number} width The width of the `svg`.\n * @prop {number} height The height of the `svg`.\n * @prop {string} content The content to put inside of the `svg`.\n * @prop {boolean} [stretch=true] Expand the `svg` to the width of the container by not setting `width` and `height` attributes. Default `true`.\n */\n\n/* documentary types/elements/rect.xml */\n/**\n * @typedef {Object} RectAttributes Non-global attributes for the element.\n * @prop {length|percentage} [x=0] This attribute determines the x coordinate of the rect. Default `0`.\n * @prop {length|percentage} [y=0] This attribute determines the y coordinate of the rect. Default `0`.\n * @prop {'auto'|length|percentage} [width=\"auto\"] This attribute determines the width of the rect. Default `auto`.\n * @prop {'auto'|length|percentage} [height=\"auto\"] This attribute determines the height of the rect. Default `auto`.\n * @prop {'auto'|length|percentage} [rx=\"auto\"] This attribute determines the horizontal corner radius of the rect. Default `auto`.\n * @prop {'auto'|length|percentage} [ry=\"auto\"] This attribute determines the vertical corner radius of the rect. Default `auto`.\n * @prop {number} [pathLength] This attribute lets specify the total length for the path, in user units.\n */\n"]}